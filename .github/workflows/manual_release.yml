name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version:'
        required: true
        type: string
      base32_version:
        description: 'Base32 version'
        required: true
        type: string
      is_lts:
        description: 'LTS release'
        required: true
        type: boolean
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GIT_TERMINAL_PROMPT: 0
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}
      BASE32_VERSION: ${{ github.event.inputs.base32_version }}
      IS_LTS: ${{ github.event.inputs.is_lts }}

    steps:
      - uses: actions/checkout@v3
      - name: Show GitHub context   
        env: 
          GITHUB_CONTEXT: ${{ toJson(github) }}   
        run: echo "$GITHUB_CONTEXT"
    
      # - name: Reconfigure git to use HTTP authentication
      #   run: >
      #     git config --global --add url."https://github.com/".insteadOf
      #     ssh://git@github.com/

      # - name: Validate
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const { RELEASE_VERSION, BASE32_VERSION } = process.env
      #       const validReleaseVersion = /^\d{1,2}\.\d{1,2}\.\d{1,2}(\-rc\.\d{1,2})?$/.test(RELEASE_VERSION)
      #       const validBase32 = /^[A-Z]{2}$/.test(BASE32_VERSION)
            
      #       if(!validReleaseVersion){
      #         core.setFailed("Invalid release version, use format: major.minor.patch(-rc.*) (6.20.0 / 6.20.0-rc.1)");
      #       }
      #       if(!validBase32){
      #         core.setFailed("Invalid base32 version, use two capital letters. Like: AA")
      #       }

      # - name: Create and populate PoC file
      #   run: |
      #     touch input-poc.txt
      #     echo release_version="$RELEASE_VERSION" >> input-poc.txt
      #     echo base32_version="$BASE32_VERSION" >> input-poc.txt
      #     echo is_lts="$IS_LTS" >> input-poc.txt
          
      # - name: Create release branch
      #   env:
      #     release_version: ${{ github.event.inputs.release_version }}
      #   run: |
      #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      #     # Check if branch already exists
      #     # Add lts support

      #     git fetch origin
      #     git checkout -b release/$release_version
      #     git add input-poc.txt

      #     git config --global user.email "${{ github.actor }}@users.noreply.github.com"
      #     git config --global user.name "${{ github.actor }}"
      #     echo "${{ github.actor }}"
      #     echo "${{ github.actor }}@users.noreply.github.com"
      #     echo "${{ github.event.workflow_dispatch.email }}"
      #     echo "${{ github.event.workflow_dispatch.name }}"

      #     # git commit -m "Add poc file"
      #     # git push origin release/$release_version

    # - name: Update changelog
    #   uses: actions/github-script@v6
    #   with:
    #     script: |
    #       const changelog = fs.readfile('CHANGELOG')